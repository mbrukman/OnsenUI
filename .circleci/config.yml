version: 2
jobs:
  build:
    working_directory: ~/working_directory
    docker:
      - image: circleci/node:12.18-browsers
        env:
          - DISPLAY=:99
          - CHROME_BIN=/usr/bin/google-chrome
    steps:
      - checkout
      - run:
          name: Print system information
          command: |
            echo "node $(node -v)"
            echo "npm v$(npm --version)"
            echo "Yarn v$(yarn --version)"
            echo "$(google-chrome --version)"
      - run:
          name: Install coveralls and gulp globally
          command: sudo yarn global add coveralls gulp
      - run:
          name: Install rsync
          command: sudo apt install -y rsync

      # css-components
      - restore_cache:
          keys:
            - v1-css-components-cache-{{ .Branch }}-{{ checksum "css-components/yarn.lock" }}
            - v1-css-components-cache-{{ .Branch }}
            - v1-css-components-cache-
      - run:
          name: Install css-components dependencies
          command: |
            cd css-components
            yarn install --pure-lockfile
      - save_cache:
          key: v1-css-components-cache-{{ .Branch }}-{{ checksum "css-components/yarn.lock" }}
          paths:
            - ./css-components/node_modules

      # Core dependencies
      - restore_cache:
          keys:
            - v1-onsenui-cache-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - v1-onsenui-cache-{{ .Branch }}-
            - v1-onsenui-cache-
      - run:
          name: Install dependencies
          command: yarn install --pure-lockfile
      - save_cache:
          key: v1-onsenui-cache-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - ./node_modules

      # bindings/angular1
      # TODO: For now, needs to be before the core build. After 2.11.0, this should be moved below it.
      - restore_cache:
          keys:
            - v1-angular1-cache-{{ .Branch }}-{{ checksum "bindings/angular1/yarn.lock" }}
            - v1-angular1-cache-{{ .Branch }}-
            - v1-angular1-cache-
      - run:
          name: Install AngularJS dependencies
          command: |
            cd bindings/angular1
            yarn install --pure-lockfile
      - save_cache:
          key: v1-angular1-cache-{{ .Branch }}-{{ checksum "bindings/angular1/yarn.lock" }}
          paths:
            - ./bindings/angular1/node_modules

      # Core build
      - run:
          name: Building Onsen UI core
          command: npm run build

      # bindings/angular2
      - restore_cache:
          keys:
            - v1-angular2-cache-{{ .Branch }}-{{ checksum "bindings/angular2/yarn.lock" }}
            - v1-angular2-cache-{{ .Branch }}-
            - v1-angular2-cache-
      - run:
          name: Install Angular 2 dependencies
          command: |
            cd bindings/angular2
            yarn install --pure-lockfile
      - save_cache:
          key: v1-angular2-cache-{{ .Branch }}-{{ checksum "bindings/angular2/yarn.lock" }}
          paths:
            - ./bindings/angular2/node_modules

      # bindings/react
      - restore_cache:
          keys:
            - v1-react-cache-{{ .Branch }}-{{ checksum "bindings/react/yarn.lock" }}
            - v1-react-cache-{{ .Branch }}-
            - v1-react-cache-
      - run:
          name: Install React dependencies
          command: |
            cd bindings/react
            yarn install --pure-lockfile
      - save_cache:
          key: v1-react-cache-{{ .Branch }}-{{ checksum "bindings/react/yarn.lock" }}
          paths:
            - ./bindings/react/node_modules

      # bindings/vue
      #- restore_cache:
      #    keys:
      #      - v1-vue-cache-{{ .Branch }}-{{ checksum "bindings/vue/yarn.lock" }}
      #      - v1-vue-cache-{{ .Branch }}-
      #      - v1-vue-cache-
      #- run:
      #    name: Install Vue dependencies
      #    command: |
      #      cd bindings/vue
      #      yarn install --pure-lockfile
      #- save_cache:
      #    key: v1-vue-cache-{{ .Branch }}-{{ checksum "bindings/vue/yarn.lock" }}
      #    paths:
      #      - ./bindings/vue/node_modules

      # Tests
      - run:
          name: Run OnsenUI Tests
          command: npm run test:skip-build

      - run: cd bindings/angular1; npm test
      - run: cd bindings/angular2; npm test
      - run: cd bindings/react; npm test
      #- run: cd bindings/vue; npm test
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit
            find . -type f -regex "./core/test/unit/.*xml" -exec cp {} ~/junit/ \;
            cat ./core/test/unit/coverage/*/lcov.info | coveralls || true # Ignore if this fails.
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit

      - deploy:
          name: Deployment
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              mkdir -p ~/artifacts
              ./scripts/nightly.sh $CIRCLE_BUILD_NUM $CIRCLE_SHA1 ~/artifacts
            fi
      - store_artifacts:
          path: ~/artifacts
